// ignore_for_file: file_names// ignore_for_file: camel_case_typesimport 'package:abhicreativefashion/Auth/sign_in.dart';import 'package:abhicreativefashion/Common/Image/Images.dart';import 'package:abhicreativefashion/Common/Utils/Utils.dart';import 'package:abhicreativefashion/Data/SharedPefences.dart';import 'package:firebase_auth/firebase_auth.dart';import 'package:flutter/material.dart';class Profile_Screen extends StatefulWidget {  @override  State<Profile_Screen> createState() => _Profile_ScreenState();}class _Profile_ScreenState extends State<Profile_Screen> {  FirebaseAuth auth = FirebaseAuth.instance;  String email = "";  String name = "";  @override  void initState() {    super.initState();    MySharedPreferences.instance.getStringValue("email").then(          (value) => setState(            () {          email = value;        },      ),    );    MySharedPreferences.instance.getStringValue("name").then(          (value) => setState(            () {          name = value;        },      ),    );  }  @override  Widget build(BuildContext context) {    return Stack(      fit: StackFit.expand,      children: <Widget>[        FractionallySizedBox(          alignment: Alignment.topCenter,          heightFactor: 0.25,          child: Row(            crossAxisAlignment: CrossAxisAlignment.start,            children: <Widget>[              Padding(                padding: EdgeInsets.symmetric(                  horizontal: Utils.getWidth(context) * 0.025,                  vertical: Utils.getHeight(context) * 0.03,                ),                child: CircleAvatar(                  backgroundImage: NetworkImage(                    "$imageUrl",                    scale: 10,                  ),                  radius: 60,                  backgroundColor: Colors.transparent,                ),              ),              Padding(                padding: EdgeInsets.symmetric(                  horizontal: Utils.getWidth(context) * 0.015,                  vertical: Utils.getWidth(context) * 0.1,                ),                child: Column(                  crossAxisAlignment: CrossAxisAlignment.start,                  children: [                    Card(                      elevation: 5,                      clipBehavior: Clip.antiAlias,                      shadowColor: Colors.redAccent,                      child: Container(                        margin: EdgeInsets.only(                          left: Utils.getHeight(context) * 0.01,                          top: Utils.getHeight(context) * 0.01,                          bottom: Utils.getHeight(context) * 0.01,                          right: Utils.getHeight(context) * 0.01,                        ),                        child: Text(name),                      ),                    ),                    const SizedBox(height: 5.0),                    Card(                      elevation: 5,                      shadowColor: Colors.redAccent,                      child: Container(                        margin: EdgeInsets.only(                          left: Utils.getHeight(context) * 0.01,                          top: Utils.getHeight(context) * 0.01,                          bottom: Utils.getHeight(context) * 0.01,                          right: Utils.getHeight(context) * 0.01,                        ),                        child: Text(email),                      ),                    ),                  ],                ),              )            ],          ),        ),        FractionallySizedBox(          alignment: Alignment.bottomCenter,          heightFactor: 0.72,          child: Column(            crossAxisAlignment: CrossAxisAlignment.start,            children: [              Card(                elevation: 5,                shadowColor: Colors.redAccent,                child: Container(                  padding: EdgeInsets.symmetric(                    horizontal: Utils.getWidth(context) * 0.05,                    vertical: Utils.getHeight(context) * 0.02,                  ),                  width: double.infinity,                  child: Row(                    children: const [                      Icon(                        Icons.help_outlined,                      ),                      SizedBox(width: 10),                      Text("About"),                    ],                  ),                ),              ),              const SizedBox(height: 10),              GestureDetector(                onTap: () {                  FirebaseAuth firebaseAuth = FirebaseAuth.instance;                  MySharedPreferences.instance.removeAll();                  signOutGoogle();                  firebaseAuth.signOut().then(                        (value) => Navigator.pushNamed(                          context,                          '/LoginScreenRoute',                        ),                      );                },                child: Card(                  elevation: 5,                  shadowColor: Colors.redAccent,                  child: Container(                    padding: EdgeInsets.symmetric(                      horizontal: Utils.getWidth(context) * 0.05,                      vertical: Utils.getHeight(context) * 0.02,                    ),                    width: double.infinity,                    child: Row(                      children: [                        Image.asset(                          Images.logout,                          color: Colors.black,                          fit: BoxFit.scaleDown,                          scale: 25,                        ),                        const SizedBox(width: 10),                        const Text("Logout"),                      ],                    ),                  ),                ),              ),            ],          ),        ),      ],    );  }}