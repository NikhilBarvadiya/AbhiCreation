import 'package:abhicreativefashion/Auth/AuthService.dart';import 'package:abhicreativefashion/Auth/sign_in.dart';import 'package:abhicreativefashion/Common/Image/Images.dart';import 'package:abhicreativefashion/Common/Utils/Utils.dart';import 'package:abhicreativefashion/Common/Widget/validator.dart';import 'package:abhicreativefashion/Data/SharedPefences.dart';import 'package:firebase_auth/firebase_auth.dart';import 'package:flutter/gestures.dart';import 'package:flutter/material.dart';import '../../Common/Widget/Custom.dart';class LoginScreen extends StatefulWidget {  const LoginScreen({Key? key}) : super(key: key);  @override  State<LoginScreen> createState() => _LoginScreenState();}class _LoginScreenState extends State<LoginScreen> {  FirebaseAuth firebaseAuth = FirebaseAuth.instance;  final TextEditingController _emailTextController = TextEditingController();  final TextEditingController _passwordTextController = TextEditingController();  bool _isObscure = true;  bool _isProcessing = false;  final _formKey = GlobalKey<FormState>();  final _focusEmail = FocusNode();  final _focusPassword = FocusNode();  bool? isLoggedIn;  @override  void initState() {    super.initState();    MySharedPreferences.instance.getBooleanValue("loggedin").then(          (value) => setState(            () {              isLoggedIn = value;            },          ),        );    if (isLoggedIn == false) {      Navigator.pushNamed(        context,        '/FirstScreenRoute',      );    }    _User();  }  @override  Widget build(BuildContext context) {    return Scaffold(      body: SingleChildScrollView(        physics: const NeverScrollableScrollPhysics(),        child: Padding(          padding: const EdgeInsets.symmetric(horizontal: 50.0, vertical: 50.0),          child: Form(            key: _formKey,            child: Column(              children: <Widget>[                Image.asset(                  Images.logo,                  fit: BoxFit.scaleDown,                ),                const Text(                  'Login',                  style: TextStyle(                      color: Colors.deepOrange,                      fontSize: 40,                      fontWeight: FontWeight.bold),                ),                SizedBox(                  height: Utils.getHeight(context) * 0.05,                ),                CustomTextField(                  icon: Icons.person,                  color: Colors.grey,                  height: 50,                  width: 300,                  Name: "Email",                  keyboardType: TextInputType.emailAddress,                  controller: _emailTextController,                  focusNode: _focusEmail,                  validator: (value) => Validator.validateEmail(                    email: value,                  ),                ),                const SizedBox(height: 10.0),                CustomTextField(                  icon: Icons.lock,                  color: Colors.grey,                  height: 50,                  width: 300,                  Name: "Password",                  controller: _passwordTextController,                  focusNode: _focusPassword,                  hide: _isObscure,                  suffixIcon: GestureDetector(                    child: Icon(                      _isObscure ? Icons.visibility : Icons.visibility_off,                      color: _isObscure ? Colors.grey : Colors.red,                    ),                    onTap: () {                      setState(() {                        _isObscure = !_isObscure;                      });                    },                  ),                  validator: (value) => Validator.validatePassword(                    password: value,                  ),                ),                const SizedBox(height: 10.0),                Padding(                  padding: const EdgeInsets.symmetric(vertical: 10.0),                  child: Row(                    children: [                      GestureDetector(                        onTap: () {                          setState(() {                            _isObscure = !_isObscure;                          });                        },                        child: Icon(                          _isObscure                              ? Icons.check_box_outlined                              : Icons.check_box_sharp,                          color: Colors.red,                        ),                      ),                      const SizedBox(width: 8.0),                      const Text(                        "Remember me",                        style: TextStyle(color: Colors.black),                      )                    ],                  ),                ),                _isProcessing                    ? const CircularProgressIndicator(                        color: Colors.deepOrange,                      )                    : CustomBotton(                        height: 50,                        width: 300,                        text: "LOG IN",                        function: () async {                          _focusEmail.unfocus();                          _focusPassword.unfocus();                          MySharedPreferences.instance.setStringValue(                              "email", _emailTextController.text);                          if (_formKey.currentState!.validate()) {                            setState(() {                              _isProcessing = true;                            });                            User? user =                                await FireAuth.signInUsingEmailPassword(                              email: _emailTextController.text,                              password: _passwordTextController.text,                            );                            setState(() {                              _isProcessing = false;                            });                            if (user != null) {                              Navigator.pushNamed(                                context,                                '/FirstScreenRoute',                              );                            }                          }                          _User();                        },                      ),                GestureDetector(                  onTap: () {                    Navigator.pushNamed(                      context,                      '/ForgotPasswordScreenRoute',                    );                  },                  child: const Padding(                    padding: EdgeInsets.only(bottom: 10.0, top: 10.0),                    child: Text(                      'Forget Password',                      style: TextStyle(                          color: Colors.grey,                          fontSize: 20,                          fontWeight: FontWeight.normal),                    ),                  ),                ),                const Padding(                  padding: EdgeInsets.only(bottom: 20.0, top: 10.0),                  child: Text(                    'Or',                    style: TextStyle(                        color: Colors.grey,                        fontSize: 20,                        fontWeight: FontWeight.normal),                  ),                ),                GestureDetector(                  onTap: () {                    signInWithGoogle().then((value) => _User());                    _User();                  },                  child: Image.asset(                    Images.Google,                    fit: BoxFit.scaleDown,                    scale: 18,                  ),                ),                SizedBox(height: Utils.getHeight(context) * 0.15),                RichText(                  text: TextSpan(                    style: DefaultTextStyle.of(context).style,                    children: <TextSpan>[                      const TextSpan(                        text: 'Not a member?',                        style: TextStyle(                            fontWeight: FontWeight.normal,                            fontSize: 18,                            color: Colors.black,                            decoration: TextDecoration.none),                      ),                      TextSpan(                        text: ' Sign up now',                        recognizer: TapGestureRecognizer()                          ..onTap = () {                            Navigator.pushNamed(                                context, '/RegisterScreenRoute');                          },                        style: const TextStyle(                          fontWeight: FontWeight.bold,                          fontSize: 20,                          color: Colors.deepOrange,                          decoration: TextDecoration.none,                        ),                      ),                    ],                  ),                ),              ],            ),          ),        ),      ),    );  }  void _User() {    if (firebaseAuth.currentUser != null) {      Navigator.pushNamed(        context,        '/FirstScreenRoute',      );    }  }}